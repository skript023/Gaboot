name: C++ Build, Vcpkg Install, and Artifact Upload

on:
  push:
    branches:
      - main  # Adjust branch name if necessary
  pull_request:
    branches:
      - main  # Adjust branch name if necessary

jobs:
  build_and_upload:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
  
      - name: Install dependencies
        run: sudo apt-get update &&  sudo apt-get install -y  build-essential cmake g++ gdb make ninja-build rsync zip

      - name: Check CMake version
        run: cmake --version

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Conan
        run: |
          sudo pip install conan
          sudo conan config install https://bitbucket.org/telkom-workspace/gaboot-backend/downloads/Linux.zip

      - name: Install Package
        run: sudo conan install conanfile.txt -of=conan/Linux --build=missing

      - name: Echo list of files before removal
        run: ls

      - name: Remove CMakeUserPresets.json
        run: sudo rm CMakeUserPresets.json

      - name: Echo list of files after removal
        run: ls

      - name: Configure CMakeList
        run: sudo cmake -D CMAKE_BUILD_TYPE=Release -S. -Bbuild -G Ninja
        
      - name: Build 64bit release Executable
        run: sudo cmake --build ./build --config Release --target Gaboot --

      - name: Check if Executable got built
        run: if [ ! -f "build/Gaboot" ]; then exit 1; fi

      - name: Upload binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/Gaboot # Replace with the path to your binary
          tag: ${{ github.ref }}
          asset_name: Gaboot # Replace with your desired asset name
          overwrite: true
          body: "Gaboot Release Binary"
          repo_name: skript023/Gaboot

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set safe directory
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "git config --global --add safe.directory /home/${{ secrets.SERVER_USER }}/gbt-backend/Linux/"

      - name: Stop existing Docker containers
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd /home/${{ secrets.SERVER_USER }}/gbt-backend/Linux/ && sudo docker-compose down"

      - name: Deploy code
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd /home/${{ secrets.SERVER_USER }}/gbt-backend/Linux/ && sudo git pull origin main"

      - name: Build and start Docker containers
        run: ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "cd /home/${{ secrets.SERVER_USER }}/gbt-backend/Linux/ && sudo docker-compose up --build -d"
